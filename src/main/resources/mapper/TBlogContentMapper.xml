<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiami.dao.TBlogContentMapper">
    <resultMap id="BaseResultMap" type="com.xiami.entity.TBlog">
        <id column="id" property="id"/>
        <result column="appreciation" property="appreciation"/>
        <result column="commentabled" property="commentabled"/>
        <result column="content" property="content"/>
        <result column="create_time" property="createTime"/>
        <result column="description" property="description"/>
        <result column="first_picture" property="firstPicture"/>
        <result column="flag" property="flag"/>
        <result column="published" property="published"/>
        <result column="recommend" property="recommend"/>
        <result column="share_statement" property="shareStatement"/>
        <result column="title" property="title"/>
        <result column="update_time" property="updateTime"/>
        <result column="views" property="views"/>
        <result column="collect_count" property="collectCount"/>
        <result column="type_id" property="typeId"/>
        <result column="user_id" property="userId"/>
    </resultMap>

    <resultMap id="ResultMap" type="com.xiami.dto.BlogContentDto" extends="BaseResultMap">
        <result column="userName" jdbcType="VARCHAR" property="userName"></result>
        <collection property="TTagList" ofType="com.xiami.entity.TTag">
            <id column="taID" jdbcType="BIGINT" property="id"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="taCreateTime" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="taUpdateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        </collection>
    </resultMap>


    <sql id="Base_Column_List">
     id, user_id, type_id, first_picture, title, content, description, recommend, share_statement,
    appreciation, commentabled, flag, views, collect_count, published, create_time, update_time
    </sql>

    <select id="selectById" parameterType="integer" resultMap="ResultMap">
      select t.id, t.appreciation, t.commentabled, t.content, t.create_time, t.description, t.first_picture,
        t.flag, t.published, t.recommend, t.share_statement, t.title, t.update_time, t.views, t.type_id,t.collect_count,
        t.user_id ,ta.id AS taID ,ta.`name`,ta.create_time AS taCreateTime, ta.update_time As taUpdateTime,user.`name` as userName
       from t_blog t,t_blog_tags tab,t_tag ta,user
       where t.id=#{id}
       and t.id=tab.blogs_id
       and tab.tags_id=ta.id
	   and user.id=t.user_id
    </select>

    <select id="getBlogsByTagIds" parameterType="list" resultMap="BaseResultMap">
        select t.* from t_blog t,t_blog_tags tbt
        where t.id=tbt.blogs_id
        and tbt.tags_id in
        <foreach collection="list" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
    </select>
</mapper>